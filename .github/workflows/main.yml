Skip to content
DEV Community
Search...

Log in
Create account

1
Jump to Comments
2
Save

Cover image for Generate JMeter Test Report and save it as artifact with GitHUB Actions
Boga Sebastian Nicolae
Boga Sebastian Nicolae
Posted on 5 de dez. de 2021

 2  2  
Generate JMeter Test Report and save it as artifact with GitHUB Actions
#
actionshackathon21
#
jmeter
#
report
I extended the workflow from GitHUB Actions presented in previous article (execute-all-jmeter-files-with-github-actions) so now we can generate and save the JMeter Test Report with GitHUB Actions.

My Workflow
checkout actions/checkout@v2
create test_report
displays the current folder (you can refer to this folder like this $GITHUB_WORKSPACE)
install the JMeter version 5.4.1(here we also display the jmeter version and also the current folder location)
install the plugins for JMeter(here we just install the Dummy Sampler, but you can add any other plugin needed by your jmeter script; you can see all the available plugins here: https://jmeter-plugins.org/files/packages)
run each jmx file from the repo
create a folder for each jmx file (for each JMeter Test Plan)
save jmeter test report(HTML format) in the folder created at previous step
upload JMeter Test Results for all jmx files as artifact
Submission Category:
Maintainer Must-Haves,
DIY Deployments

Yaml File or Link to Code
GitHub logo sebiboga / jmeter_one
JMeter scripts
jmeter_one
different JMeter scripts
GitHUB Actions used to define the workflow to run all jmeter scripts from repository [main branch]
GitHUB Actions used to define the workflow to run all jmeter scripts from repository and save Test Report as artifact [main branch]

View on GitHub




# This is a workflow to help you run all JMeter scripts with Actions, and save Test Results as artifact

name: jmeter_test_results

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: where are the files?
        run: |
           pwd
           ls
      - name: create test_report
        run: |
           mkdir $GITHUB_WORKSPACE/test_report

      # Runs a set of commands using the runners shell
      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.zip
          unzip apache-jmeter-5.4.1.zip
          cd apache-jmeter-5.4.1/bin
          ./jmeter -v
          pwd

      - name: install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip

      - name: run jmx scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: test_results
         path: test_report
Additional Resources / Info
JMeter test results are captured as artifacts for each Workflow Run in GitHUB actions.
This is useful because it's a way to share the test results with your team. They just download the test results and they can see the results.

Top comments (1)

Subscribe
pic
Add to the discussion
 
 
sebiboga profile image
Boga Sebastian Nicolae 
â€¢
5 de dez. de 21 â€¢ Edited on 5 de dez.

I changed a little bit the script, just in case you want to keep in artifacts also the JTL files generted. So before saving the artifact, I just added this script to the Github Actions:
      - name: move jtl files to test_report
        run: |
         mv *.jtl $GITHUB_WORKSPACE/test_report
You can see the full YML file here:
# This is a workflow to help you run all JMeter scripts with Actions, and save Test Results as artifact
name: jmeter_test_results
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: where are the files?
        run: |
           pwd
           ls
      - name: create test_report
        run: |
           mkdir $GITHUB_WORKSPACE/test_report
       # Runs a set of commands using the runners shell
      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.zip
          unzip apache-jmeter-5.4.1.zip
          cd apache-jmeter-5.4.1/bin
          ./jmeter -v
          pwd
      - name: install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip
      - name: run jmx scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
      - name: move jtl files to test_report
        run: |
         mv *.jtl $GITHUB_WORKSPACE/test_report
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: test_results
         path: test_report

1
 like
Like
Reply
Code of Conduct â€¢ Report abuse
DEV Community

An Animated Guide to Node.js Event Loop


Node.js doesnâ€™t stop from running other operations because of Libuv, a C++ library responsible for the event loop and asynchronously handling tasks such as network requests, DNS resolution, file system operations, data encryption, etc.

What happens under the hood when Node.js works on tasks such as database queries? We will explore it by following this piece of code step by step.

Read next
arndom profile image
Get a custom Github octocat in your README
Nabil Alamin - Nov 28 '21

stphnwlsh profile image
Dotnet Outdated - Install and Update
Stephen Walsh - Nov 27 '21

jforatier profile image
Build, Test and Deploy your Android ApplicationðŸ“± with GitHub Actions ðŸ¤–
Julien Foratier - Nov 26 '21

epassaro profile image
Keep your research reproducible with conda-pack and GitHub Actions
epassaro - Nov 27 '21


Boga Sebastian Nicolae
Follow
Performance Tester
WORK
Tester
JOINED
4 de dez. de 2021
More from Boga Sebastian Nicolae
JMeter 5.4.1 fix for Security CVE-2021-44228 issue
#jmeter #cve202144228 #security
JTL to CSV using Github Actions
#actionshackathon21 #jmeter #jtl #csv
Execute all JMeter files with GitHUB Actions
#opensource #actionshackathon21 #jmeter #automation
DEV Community

15 ChatGPT Plugins to hack productivity cover image

15 ChatGPT Plugins to hack productivity
âœ¨ TweetGPT
âœ¨ Promptheus
âœ¨ YouTube Summary
âœ¨ Merlin
âœ¨ Share GPT
âœ¨ WebChatGPT
âœ¨ ChatGPT Writer
âœ¨ Superpower ChatGPT
âœ¨ ChatOnAi
âœ¨ ChatGPT Prompt Genius
âœ¨ Open AI ChatGPT for Gmail
...

Read full post

# This is a workflow to help you run all JMeter scripts with Actions, and save Test Results as artifact

name: jmeter_test_results

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: where are the files?
        run: |
           pwd
           ls
      - name: create test_report
        run: |
           mkdir $GITHUB_WORKSPACE/test_report

      # Runs a set of commands using the runners shell
      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.zip
          unzip apache-jmeter-5.4.1.zip
          cd apache-jmeter-5.4.1/bin
          ./jmeter -v
          pwd

      - name: install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip

      - name: run jmx scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: test_results
         path: test_report
         - name: JMeter Test
        with:
          test-plan-path: ./PlanoTeste/ConsultaCEP.jmx
          args: ""
      
